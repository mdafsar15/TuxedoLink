https://docs.oracle.com/cd/E13222_01/wls/docs81/wtc_admin/Cluster.html#1112009   ====>  How to Manage WebLogic Tuxedo Connector in a Clustered Environment

https://docs.oracle.com/middleware/1212/wls/WTCCF/samples.htm#WTCCF311 		=====>  WebLogic Tuxedo Connector Samples Quick Start Guide

https://docs.oracle.com/cd/E18050_01/tuxedo/docs11gr1/getstart/overview.html 	=====>  Overview of the Oracle Tuxedo CORBA Environment

http://books.gigatux.nl/mirror/beaweblogic8.1/0672324873_ch34lev1sec1.html	=====>  WebLogic Tuxedo Connector

https://login.oracle.com/oam/server/obrareq.cgi?encquery%3DbNRPUhh9dGxTjPhBgI8EsxnaDowEDilE2n77mK6gtyOZvjRfvAvVF1i55yQXtlcfNO%2FCZIusEemjdOQISXFL7A6qc%2F5aHYSjSGtlilt6yBFIC%2Bo3Ug6glatcLPFYtToHSITtmbrp%2BBYDVCwbi0%2B9Rvle8K9I81PTXAH5xIH%2BjsM2F6htyy5oUmKdKxMwWoo8KlILLc12ywYeHAB2%2FDwJjWoowhhlFvXZmxAnfoOseA96yIf2Aad%2BxMuTCprKqKfAb%2Fe9UmFOBhBAuUponVazR%2BgDYfoxMxoBk88SegB0zt0PM69sVwOEx2We3KG1HhIawPgnulxd7VYCN1oAzLAKhhPlqunSzFUfgIS0JCosNm4%3D%20agentid%3Dedelivery-extprod%20ver%3D1%20crmethod%3D2&ECID-Context=1.005jZ3zfKuMFo2KimTXvWJ0000EB002zV%5E%3BkXjE ====> Tuxedo Application

https://docs.oracle.com/middleware/1212/wls/INTRO/examples.htm#INTRO299		=====>  Sample Applications and Code Examples


==========================WebLogic Tuxedo Connector ATMI Transactions====================

==> https://docs.oracle.com/cd/E13222_01/wls/docs61/wtc_atmi/WTC_ATMI_Transactions.html
==>
   public class TransactionSampleBean implements SessionBean {

.....

public int transaction_sample () {

          int ret = 0;
          try {
                    javax.naming.Context myContext = new InitialContext();
                    TransactionManager tm = (javax.transaction.TransactionManager)
                    myContext.lookup("javax.transaction.TransactionManager");

// Begin Transaction
                    tm.begin ();

                    TuxedoConnectionFactory tuxConFactory = (TuxedoConnectionFactory) 
                    ctxt.lookup("tuxedo.services.TuxedoConnection");

// You could do a local JDBC/XA-database operation here
// which will be part of this transaction.
.....

// NOTE 1: Get the Tuxedo Connection only after 
// you begin the transaction if you want the 
// Tuxedo call to be part of the transaction!

// NOTE 2: If you get the Tuxedo Connection before
// the transaction was started, all calls made from
// that Tuxedo Connection are out of scope of the 
// transaction.

                    TuxedoConnection myTux = tuxConFactory.getTuxedoConnection();

// Do a tpcall. This tpcall is part of the transaction.
                    TypedString depositData = new TypedString("somecharacters,5000.00");

                    Reply depositReply = myTux.tpcall("DEPOSIT", depositData, 0);

// You could also do tpcalls which are not part of 
// transaction (For example, Logging all attempted 
// operations etc.) by setting the TPNOTRAN Flag!
                    TypedString logData = 
                    new TypedString("DEPOSIT:somecharacters,5000.00");

                    Reply logReply = myTux.tpcall("LOGTRAN", logData, 
                    ApplicationToMonitorInterface.TPNOTRAN);

// Done with the Tuxedo Connection. Do tpterm.
                    myTux.tpterm ();

// Commit Transaction...
                    tm.commit ();

// NOTE: The TuxedoConnection object which has been
// used in this transaction, can be used after the
// transaction only if TPNOTRAN flag is set.
}
                    catch (NamingException ne) {
                    System.out.println ("ERROR: Naming Exception looking up JNDI: " + ne);
                    ret = -1;
}
                    catch (RollbackException re) {
                    System.out.println("ERROR: TRANSACTION ROLLED BACK: " + re);
                    ret = 0;
}
                    catch (TPException te) {
                    System.out.println("ERROR: tpcall failed: TpException: " + te);
                    ret = -1;
}
                    catch (Exception e) {
                    log ("ERROR: Exception: " + e);
                    ret = -1;
}

                    return ret;
}


==========================================Interoperability with Oracle WebLogic Server==================================

https://docs.oracle.com/cd/E35855_01/tuxedo/docs12c/interop/iopwls.html

====================================java tuxedo code==================================================================

https://docs.oracle.com/cd/E21764_01/web.1111/e13723/clients.htm#WTCPG136

====================================WebLogic Tuxedo Connector==========================================================
http://books.msspace.net/mirrorbooks/beaweblogic8.1/0672324873_ch34lev1sec1.html

==========================bank app=================================================
https://docs.oracle.com/cd/E13161_01/tuxedo/docs10gr3/tutor/tutov.html